#!/usr/bin/env bash
# funcoeszz
#
# INFORMAÇÕES: http://www.funcoeszz.net
# NASCIMENTO : 22 de Fevereiro de 2000
# AUTORES    : Aurelio Marinho Jargas <verde (a) aurelio net>
#              Itamar Santos de Souza <itamarnet (a) yahoo com br>
#              Thobias Salazar Trevisan <thobias (a) thobias org>
# DESCRIÇÃO  : Funções de uso geral para o shell Bash, que buscam
#              informações em arquivos locais e fontes na Internet
# LICENÇA    : GPL-2.0-only
# CHANGELOG  : http://www.funcoeszz.net/changelog.html
#
ZZVERSAO=dev
ZZUTF=1
#
##############################################################################
#
#                                Configuração
#                                ------------
#
#
### Configuração via variáveis de ambiente
#
# Algumas variáveis de ambiente podem ser usadas para alterar o comportamento
# padrão das funções. Basta defini-las em seu .bashrc ou na própria linha de
# comando antes de chamar as funções. São elas:
#
#      $ZZCOR      - Liga/Desliga as mensagens coloridas (1 e 0)
#      $ZZPATH     - Caminho completo para o arquivo principal (funcoeszz)
#      $ZZDIR      - Caminho completo para o diretório com as funções
#      $ZZTMPDIR   - Diretório para armazenar arquivos temporários
#      $ZZOFF      - Lista das funções que você não quer carregar
#
# Nota: Se você é paranóico com segurança, configure a ZZTMPDIR para
#       um diretório dentro do seu HOME.
#
### Configuração fixa neste arquivo (hardcoded)
#
# A configuração também pode ser feita diretamente neste arquivo, se você
# puder fazer alterações nele.
#
ZZCOR_DFT=1                       # colorir mensagens? 1 liga, 0 desliga
ZZPATH_DFT="/usr/bin/funcoeszz"   # rota absoluta deste arquivo
ZZDIR_DFT="$HOME/zz"              # rota absoluta do diretório com as funções
ZZTMPDIR_DFT="${TMPDIR:-/tmp}"    # diretório temporário
#
#
##############################################################################
#
#                               Inicialização
#                               -------------
#
#
# Variáveis auxiliares usadas pelas Funções ZZ.
# Não altere nada aqui.
#
#
### Truques para descobrir a localização deste arquivo no sistema
#
# Se a chamada foi pelo executável, o arquivo é o $0.
# Senão, tenta usar a variável de ambiente ZZPATH, definida pelo usuário.
# Caso não exista, usa o local padrão ZZPATH_DFT.
# Finalmente, força que ZZPATH seja uma rota absoluta.
#
test "${0##*/}" = 'bash' -o "${0#-}" != "$0" || ZZPATH="$0"
test -n "$ZZPATH" || ZZPATH=$ZZPATH_DFT
test "${ZZPATH#/}" = "$ZZPATH" && ZZPATH="$PWD/${ZZPATH#./}"

test -d "${ZZPATH%/*}/zz" && ZZDIR="${ZZPATH%/*}/zz"
test -z "$ZZDIR" && test -d "$ZZDIR_DFT" && ZZDIR=$ZZDIR_DFT

# Descobre qual o navegador em modo texto está disponível no sistema
if test -z "$ZZBROWSER"
then
	for ZZBROWSER in lynx links links2 elinks w3m
	do
		type "$ZZBROWSER" >/dev/null 2>&1 && break
	done
fi
export ZZBROWSER

#
### Últimos ajustes
#
ZZCOR="${ZZCOR:-$ZZCOR_DFT}"
ZZTMP="${ZZTMPDIR:-$ZZTMPDIR_DFT}"
ZZTMP="${ZZTMP%/}/zz"  # prefixo comum a todos os arquivos temporários
unset ZZCOR_DFT ZZPATH_DFT ZZDIR_DFT ZZTMPDIR_DFT

#
### Forçar variáveis via linha de comando
#
while test $# -gt 0
do
	case "$1" in
		--path) ZZPATH="$2"   ; shift; shift ;;
		--dir ) ZZDIR="${2%/}"; shift; shift ;;
		--cor ) ZZCOR="$2"    ; shift; shift ;;
		*) break;;
	esac
done

# A linha seguinte é usada para gerar a versão tudo-em-um, não remova
#@


##############################################################################
#
#                    Carregamento das funções do $ZZDIR
#                    ----------------------------------
#
# O carregamento é feito em dois passos para ficar mais robusto:
# 1. Obtenção da lista completa de funções, ativadas e desativadas.
# 2. Carga de cada função ativada.
#

### Passo 1

#### ZZOFF é sempre algo só setado pelo usuário
#### ZZON é sempre setado no te1 pelo make-release
#### ZZON sempre defaulta pra zz/* na versão git
#### ZZON também pode ser definido pelo usuário
#### ZZON fica no env do usuário no caso de `source funcoeszz`
#### zzzz precisa considerar ZZON e ZZOFF pra mostrar a lista de funções
#### se o usuário atualizar ZZON ou ZZOFF na shell atual, basta rodar o core de novo



# FIXME usar ZZON pro te1 não funciona, pois nesse ponto ele já carregou todas as funções
# Ah, e o ZZON do usuário será sobrescrito pelo ZZON que o make-release.sh cria
# o make-release poderia setar o ZZON somente se ainda não estivesse setado
# ou setar também um ZZTODAS=$ZZON. Com ZZALL eu consigo dar unset em tudo que é ALL exceto o que é ON (e depois vem o unset $zz_off normal). off sempre tem precedência.
# teria que ter um código pra e na hora de respeitar o zzoff
# teria que ter um ZZON exclusivo da make-release, que o ZZON do usuário poderia sobrescrever

# XXX sem o prefixo zz
test -z "$ZZON" -a -n "$ZZDIR" -a -d "$ZZDIR" &&
	ZZON="$(cd "$ZZDIR"; ls -1 zz* | sed 's/^zz// ; s/\.sh$//')"

# echo ON: $ZZON
# echo OFF: $ZZOFF


# Normaliza listas ON e OFF: uma por linha, sempre com prefixo zz
zz_off=$(
	test -n "$ZZOFF" &&
		echo "$ZZOFF" |
			tr -s '\t ' '\n' |
			sed 's/^zz// ; s/^/zz/'
)
zz_on=$(
	test -n "$ZZON" &&
		echo "$ZZON" |
			tr -s '\t ' '\n' |
			sed 's/^zz// ; s/^/zz/' |
			while read -r zz_nome
			do
				# Remove da lista ON caso a função esteja listada em OFF
				echo "$zz_off" | grep -Fx "$zz_nome" > /dev/null || echo "$zz_nome"
			done
)

# echo ON: $zz_on
# echo OFF: $zz_off
# exit 0

### Passo 2

### Modo zz/*
# É necessário carregar agora todas as funções ligadas
if test -n "$ZZDIR"
then
	# Carregamento das funções ativas na shell atual
	for zz_nome in $zz_on
	do
		zz_arquivo="$ZZDIR/$zz_nome.sh"
		test -r "$zz_arquivo" && source "$zz_arquivo"
	done
fi

### Modo tudo-em-um
# Todas as funções já foram carregadas por estarem dentro deste arquivo.
# Agora faremos o desligamento "manual" das funções ZZOFF.
# Desliga todas em uma só linha (note que não usei aspas)
test -n "$zz_off" && unset $zz_off

if test -z "$zz_on"
then
	echo "XXX nenhuma função disponível. Estranho..."
fi

### Carregamento terminado, funções já estão disponíveis

# Limpa variáveis e funções temporárias
# Nota: prefixo zz_ para não conflitar com variáveis da shell atual
unset zz_arquivo
unset zz_nome
unset zz_off
unset zz_on


##----------------------------------------------------------------------------
## Lidando com a chamada pelo executável

# Se há parâmetros, é porque o usuário está nos chamando pela
# linha de comando, e não pelo comando source.
if test -n "$1"
then

	case "$1" in

		# Mostra a tela de ajuda
		-h | --help)

			cat - <<-FIM

				Uso: funcoeszz <função> [<parâmetros>]

				Lista de funções:
				    funcoeszz zzzz
				    funcoeszz zzajuda --lista

				Ajuda:
				    funcoeszz zzajuda
				    funcoeszz zzcores -h
				    funcoeszz zzcalcula -h

				Instalação:
				    funcoeszz zzzz --bashrc
				    source ~/.bashrc
				    zz<TAB><TAB>

				Saiba mais:
				    http://funcoeszz.net

			FIM
		;;

		# Mostra a versão das funções
		-v | --version)
			echo "Funções ZZ v$ZZVERSAO"
		;;

		-*)
			echo "Opção inválida '$1' (tente --help)"
		;;

		# Chama a função informada em $1, caso ela exista
		*)
			zz_func="$1"

			# Garante que a zzzz possa ser chamada por zz somente
			test "$zz_func" = 'zz' && zz_func='zzzz'

			# O prefixo zz é opcional: zzdata e data funcionam
			zz_func="zz${zz_func#zz}"

			# A função existe?
			if type $zz_func >/dev/null 2>&1
			then
				shift
				$zz_func "$@"
			else
				echo "Função inexistente '$zz_func' (tente --help)"
			fi

			unset zz_func
		;;
	esac
fi
